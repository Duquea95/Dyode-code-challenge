Dyode Developer Assessment Test

1. Describe how you would make a line of text in a homepage section editable from theme customization and how you would access this in liquid.

You would have to create a new object in the schema with the setting type text, and refer to it by its ID using the liquid object. If the object below was created in the schema, then it would be invoked by using {{settings.text-copy}} in the liquid file.
{
    "name": "Text",
    "settings" : [
      {
      "type": "text",
      "id": "text-copy",
      "default": "Insert Text Here",
      "label": "Text Copy"
      }
    ]
}

2. How would you add the collection featured image as a banner on the collection liquid template?

 {% if collection.image %}
    <div>
      <img src={{ collection.image | img_url: 'large' }} />
    </div>
{% endif %}

3. Using liquid code and HTML, create a simple pagination container, "< 1 2 ... 5 >".

{% paginate collection.products by 5 %}
  {% for product in collection.products %}
    <!--show product details here -->   
    <div>
      <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
      {{ product.price | money }}
      <a href="{{ product.url | within: collection }}">
        <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
      </a>
    </div> 
  {% endfor %}
  <!-- show pagination links here -->  
{% endpaginate %}

4. Using liquid code, access the product named "Blue T-Shirt". Store the id, title, handle, price, url, and image in variables.

{% assign dynamic_product= all_products["Blue-T-Shirt"] %}
{% assign id= dynamic_product.id %}
{% assign title= dynamic_product.title %}
{% assign handle= dynamic_product.handle %}
{% assign productUrl= dynamic_product.url %}
{% assign price= dynamic_product.price %}
{% assign img = dynamic_product.featured_image.src %}

{{id}}
{{title}}
{{handle}}
{{productUrl}}
{{price | money}}
<img src="{{img | img_url: 'large'}}"/>

5. Using liquid code, create a key:value array using the list below. Loop through the array. Upon key type, store the value in a variable to be used later:
fruit:apple
vegetable:carrot
cloth:t-shirt
denim:jeans 

{% assign key = "fruit,vegetable,cloth,denim" | split: ',' %}
{% assign values = "apple,carrot,t-shirt,jean" | split: ',' %}

{% assign i = 0 %}

{% for item in key %}
	{{item}}: {{values[i]}}
	{% capture val %}{{values[i]}}{% endcapture %}
	{% assign newVal[i] =  val%}
	{% assign i = i | plus:1 %}
{% endfor%}
